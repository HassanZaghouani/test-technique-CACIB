{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'test-technique-CACIB';\n    this.euro = 1.1;\n    this.changeForm = new FormGroup({\n      tauxEuro: new FormControl({\n        value: this.euro,\n        disabled: true\n      }),\n      montantEuro: new FormControl('', [Validators.required]),\n      montantUsd: new FormControl({\n        value: 0,\n        disabled: true\n      })\n    });\n  }\n  ngOnInit() {\n    this.timerSubscription = timer(0, 3000).pipe(map(() => {\n      const max = 0.05;\n      const min = -0.05;\n      this.euro = +(this.euro + Math.random() * (max - min) + min).toFixed(3);\n      this.changeForm.setControl(\"tauxEuro\", new FormControl({\n        value: this.euro,\n        disabled: true\n      }));\n    })).subscribe();\n  }\n  calculer() {\n    const eur = +this.changeForm.controls['montantEuro'].value;\n    let reusult = eur * this.euro;\n    this.changeForm.setControl(\"montantUsd\", new FormControl({\n      value: this.euro,\n      disabled: true\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[1, \"card\", 2, \"margin\", \"5%\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"blockquote\", \"mb-0\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"tauxEuro\"], [\"type\", \"number\", \"formControlName\", \"tauxEuro\", \"id\", \"tauxEuro\", \"placeholder\", \"taux de change\", 1, \"form-control\"], [\"for\", \"montantEuro\"], [\"type\", \"number\", \"formControlName\", \"montantEuro\", \"id\", \"montantEuro\", \"placeholder\", \"Montant en Euro\", 1, \"form-control\"], [\"for\", \"montantUsd\"], [\"type\", \"number\", \"formControlName\", \"montantUsd\", \"id\", \"montantUsd\", \"placeholder\", \"Montant en USD\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2, \" Test taux de change \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"blockquote\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Taux de change EUR/USD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n      i0.ɵɵtext(12, \"Montant en Euro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 5)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Montant en USD\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_18_listener() {\n        return ctx.calculer();\n      });\n      i0.ɵɵtext(19, \"Calculer\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.changeForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"disabled\", ctx.changeForm.invalid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAAiCC,KAAK,QAAQ,MAAM;AACpD,SAASC,GAAG,QAAmB,gBAAgB;;;AAO/C,OAAM,MAAOC,YAAY;EAUvBC;IATA,UAAK,GAAG,sBAAsB;IAC9B,SAAI,GAAU,GAAG;IACjB,eAAU,GAAG,IAAIL,SAAS,CAAC;MACzBM,QAAQ,EAAE,IAAIP,WAAW,CAAG;QAAEQ,KAAK,EAAE,IAAI,CAACC,IAAI;QAAEC,QAAQ,EAAE;MAAI,CAAC,CAAC;MAChEC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACtDC,UAAU,EAAE,IAAIb,WAAW,CAAC;QAAEQ,KAAK,EAAC,CAAC;QAAEE,QAAQ,EAAE;MAAI,CAAC;KACvD,CAAC;EAGY;EACdI,QAAQ;IACN,IAAI,CAACC,iBAAiB,GAAGZ,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAACa,IAAI,CAC1CZ,GAAG,CAAC,MAAK;MACP,MAAMa,GAAG,GAAI,IAAI;MACjB,MAAMC,GAAG,GAAI,CAAC,IAAI;MAClB,IAAI,CAACT,IAAI,GAAG,CAAC,CAAC,IAAI,CAACA,IAAI,GAAGU,IAAI,CAACC,MAAM,EAAE,IAAIH,GAAG,GAAGC,GAAG,CAAC,GAAGA,GAAG,EAAEG,OAAO,CAAC,CAAC,CAAC;MACvE,IAAI,CAACC,UAAU,CAACC,UAAU,CAAC,UAAU,EAAC,IAAIvB,WAAW,CAAC;QAAEQ,KAAK,EAAE,IAAI,CAACC,IAAI;QAAEC,QAAQ,EAAE;MAAI,CAAC,CAAC,CAAC;IAC7F,CAAC,CAAC,CACH,CAACc,SAAS,EAAE;EACf;EAEAC,QAAQ;IACN,MAAMC,GAAG,GAAW,CAAC,IAAI,CAACJ,UAAU,CAACK,QAAQ,CAAC,aAAa,CAAC,CAACnB,KAAM;IACnE,IAAIoB,OAAO,GAAWF,GAAG,GAAG,IAAI,CAACjB,IAAI;IACrC,IAAI,CAACa,UAAU,CAACC,UAAU,CAAC,YAAY,EAAC,IAAIvB,WAAW,CAAC;MAAEQ,KAAK,EAAE,IAAI,CAACC,IAAI;MAAEC,QAAQ,EAAE;IAAI,CAAC,CAAC,CAAC;EAC/F;;AA1BWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVzBC,8BAAsC;MAElCA,qCACF;MAAAA,iBAAM;MACNA,8BAAuB;MAIOA,sCAAsB;MAAAA,iBAAQ;MACpDA,2BAAgH;MAClHA,iBAAM;MACNA,+BAAwB;MACGA,gCAAe;MAAAA,iBAAQ;MAChDA,4BAAuH;MACzHA,iBAAM;MACNA,+BAAwB;MACEA,+BAAc;MAAAA,iBAAQ;MAC9CA,6BAAoH;MACtHA,iBAAM;MACNA,mCAAmG;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS;;;MAbhHA,eAAwB;MAAxBA,0CAAwB;MAapBA,gBAA+B;MAA/BA,iDAA+B","names":["FormControl","FormGroup","Validators","timer","map","AppComponent","constructor","tauxEuro","value","euro","disabled","montantEuro","required","montantUsd","ngOnInit","timerSubscription","pipe","max","min","Math","random","toFixed","changeForm","setControl","subscribe","calculer","eur","controls","reusult","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\addinn-thinkpad\\Desktop\\test-technique-CACIB\\src\\app\\app.component.ts","C:\\Users\\addinn-thinkpad\\Desktop\\test-technique-CACIB\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription, interval, timer } from 'rxjs';\nimport { map, takeWhile } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'test-technique-CACIB';\n  euro:number = 1.1;\n  changeForm = new FormGroup({\n    tauxEuro: new FormControl(  { value: this.euro, disabled: true}),\n    montantEuro: new FormControl('',[Validators.required]),\n    montantUsd: new FormControl({ value:0, disabled: true}),\n  });\n  timerSubscription: Subscription; \n\n  constructor(){}\n  ngOnInit(): void {\n    this.timerSubscription = timer(0, 3000).pipe( \n      map(() => { \n        const max =  0.05\n        const min =  -0.05        \n        this.euro = +(this.euro + Math.random() * (max - min) + min).toFixed(3);        \n        this.changeForm.setControl(\"tauxEuro\",new FormControl({ value: this.euro, disabled: true}))\n      }) \n    ).subscribe(); \n  }\n\n  calculer(){\n    const eur : number =+this.changeForm.controls['montantEuro'].value!;\n    let reusult :number = eur * this.euro\n    this.changeForm.setControl(\"montantUsd\",new FormControl({ value: this.euro, disabled: true}))\n  }\n}\n","<div class=\"card\" style=\"margin: 5%;\">\n  <div class=\"card-header\">\n    Test taux de change\n  </div>\n  <div class=\"card-body\">\n    <blockquote class=\"blockquote mb-0\">\n      <form [formGroup]=\"changeForm\">\n        <div class=\"form-group\">\n          <label for=\"tauxEuro\">Taux de change EUR/USD</label>\n          <input type=\"number\" formControlName=\"tauxEuro\" class=\"form-control\" id=\"tauxEuro\" placeholder=\"taux de change\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"montantEuro\">Montant en Euro</label>\n          <input type=\"number\" formControlName=\"montantEuro\" class=\"form-control\" id=\"montantEuro\" placeholder=\"Montant en Euro\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"montantUsd\">Montant en USD</label>\n          <input type=\"number\" formControlName=\"montantUsd\" class=\"form-control\" id=\"montantUsd\" placeholder=\"Montant en USD\">\n        </div>\n        <button [disabled]=\"changeForm.invalid\" type=\"submit\" class=\"btn btn-primary\" (click)=\"calculer()\">Calculer</button>\n      </form>\n    </blockquote>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}